http://serpent231.tripod.com/cliche.shtml
Supposed to be bad cliches 

Obligatory Dungeons. Every game has a mountain, at least one cave, some type of icy dungeon, a tower, a castle, a high-tech dungeon, a forest, and a shrine. Most have volcanoes.
Obligatory Status Changes. All RPGs have the following status changes: poison, blindness, sleep, confusion, and paralysis.
Obligatory Tool Rule. Every action-RPG, or game with action-RPG style puzzles (like Wild Arms or Lufia 2), has bombs and a hookshot.
Wandering Mercenary. Another stereotypical character in almost every RPG. A wandering ninja or mercenary that is helping the party, but doesn't really care about what they are fighting for. Frequently a popular character. (see Shadow, Magus, Boomerang, etc.). Usually wants revenge on one of the main bad guys (as in Magus or Vincent's case), and rarely talks.




Some are actually legitimate criticism

Obstacle Course Rule. Simple objects such as pots and chairs serve as major obstacles, forcing you to walk around them, rather than just step over them.
Rambo Rule. Having a higher Strength statistic increases the amount of damage guns do (exception: Chrono Trigger). This makes no sense whatsoever.
Randomly Drops. Words every gamer dreads. Means you have to spend countless hours fighting an enemy over and over so it will drop the super-duper piece of equipment that you have a 1 in 127 chance in getting. See FF4, Earthbound, and the BOF games.
Revival Law. Logical loophole that allows you to revive dead characters in battle with items and magic, but keeps characters dead that are killed for plot purposes. (Exception: In Final Fantasy 5, Galuf is killed, but it makes sense. He fights Exdeath, going way beyond unconsciousness, being stuck at 0 hp most the time but still able to fight. After he's spent, the party tries using revival items and spells on him, but his spirit is too lost for them to work. This is -the- only game I know of which explains the Revival Law, and they did it perfectly, imo. -- Minami)See also Soft-Hard Rule.
Safety Net. Characters can jump or fall unlimited heights without ever getting hurt.
Shadowboxing Rule. In the majority of RPGs, characters fight by simply swinging their weapons in the air and not coming at all close the enemies. (This is not true for games with polygonal battles or Chrono Trigger)
Shooting Blanks. Guns are always weaker than swords.
Size Doesn't Matter. Characters can perform martial arts moves on enemies many times larger than they are. Want to have Sabin do a suplex on a train? No problem!
Smokey's Rule. Fire spells do not start fires; they can be used in thick forests with no repercussions. (Exception: Kartia and Bahamut Lagoon)
Soft / Hard rule. Characters can get hit with all sorts of attacks (lightning bolts, earthquakes, meteors, etc.) during battle and still be standing, but for purposes of the storyline, they can be killed by a lowly dagger or sword.
Sound Sleeper. Characters put to sleep during battle can sleep through the various sounds of battles, including meteor strikes, summoned dragons, exploding bombs, and never wake up -- not to mention being actually attacked and not waking up. In addition, almost all RPG characters either sleep kneeling or standing up. (Chrono Trigger is the only game where your characters actually lay down when they're put to sleep)
Status Change rule. All bosses are immune to status changes (poison, sleep, etc.) and instant death spells.
Universal System Rule. All game worlds (er, except Evermore) have a universal currency system, and a universal language (except FF1). This is despite most worlds having lost cities, remote elf villages, warring kingdoms, obscure islands, etc.
Unlimited Warranty. Weapons and armor never break. (Exceptions: Zelda 64 and FF Rods)
Warm-up Battle. Rather than just have you wander around town talking to people, many games start with a really easy dungeon or battle (sometimes a Deja Vu Dungeon). See the bombing mission in FF7, attack on Narshe in FF6, opening battle against Zoot in Vandal~Hearts.
Weapon Specialization Rule. Each character is very limited in the type of weapons they can use (except in the SaGa games and FF games with Jobs), usually only having one type (swords, axes, staffs, etc.) that they can use.




Style Conventions and Other Similar Notes
	Make things such as the window global variables so that they do not have to passed to practically
		every object.

Forumlae Etc
	Create some kind of random variance in Entity
		Allows for enemies that are slightly different
		Allows for players that are slightly different
		Increases realism
			People with the same nature are merely similar, not clones


Dimentions for imagemagick are in widthxheight format
	Units are pixels

Command to convert raw spritesheet into usable spritesheet
	Old version
		convert -crop 330x80+35+145 Sprites.png ./slices/Sprites_rip
	New Version - USE THIS ONE
		convert -crop 320x80+40+145 Sprites.png ./slices/Sprites_rip
		
		Chops into 8 40x80 pixel sprites
			Little more could come off the bottom, but I think it's ok


Psudo-3D Chipmunk-based Engine
	"Render" the bases in Chipmunk using the shapes provided.
	Additionally, a hight map of sorts will be stored, either as a single number or a proc
		depending on the type of terrain.
		
	Eliminate rotation with Float::INFINITY as the moment of inertia
	
	Remember to change forces applied to the character for movement when it is in the air.
		Movement in the air should be extremely restricted.

New Stat System
	Split stats into two categories:
		Physical attributes
			Strength
			Defense
			Agility
			Health
			Ability to hit
		Mental(Magical) Attributes
			Power
			Dispersion rate		/	Chaos/Order(Control?) level
			Maximum rate of flux
			Amount of mana
			Detection / Empathy
			
		Also, stats are divided into two over-arching groups
			Raw
				Stats that determine physical or mental attributes
			Composite
				Stats based on one or more raw stats
Stat Menu
	Give different options for how much information to show
		Should be toggle-able on the stat page itself, not on some other "options" menu/page
	Default
		Show only Composite stats
	Advanced
		Show Composite stats and Raw stats
			Show what stats flow into what
	Hardcore
		Show stat calculations as well
			Allows player to see how many raw stat points he needs to up a certain composite stat
			
STATS
	Raw										(based on the attributes of that Entity in and of itself)
		Strength
		Constitution
		Dexterity
		Agility
		Luck
		
		Power			(Mental/Spiritual power)
		Perception		(Ki sense)
		Control			(dictates dispersion rate)
		Flux			(controls mana fluctuation tolerance)
		
	Composite				(most, if not all, composite stats can take bonuses from equipment, etc)
		HP							Constitution
		MP							Power
		HP Recovery Rate			Constitution
		MP Recovery Rate			Flux
		Active MP Recovery Rate		Flux, Power
		Attack						Weapon Stats, Strength, Dexterity
		Defense						Armor Stats, Constitution
		Magical Attack				Power
		Fluctuation Tolerance		Flux
		
		Accuracy					Dexterity
		Critical Hit Rate			Dexterity, Luck
		Dodge Rate					Agility, weight, weapon size, Luck, dodge mod (based on per)
		
		Attack Range (Weapons)		Weapon type, Weapon size
		Attack Range (Magic)		Power
		Attack Speed (Weapons)	Weapon type, weapon size(non-firearms), Dexterity, Agility, Speed Modifier
		Attack Speed (Magic)		Flux
		Speed Modifier				Weight in proportion to weight limit
		
		Weight Limit				Strength
		Weight						Constitution, Armor Weight, Weapon Weight
		
		Movement speed				Speed Modifier, Agility, Strength
		Jump height					Strength, Agility
		
		Magic Accuracy				Perception
		Area of Effect				Power
		AoE Density					Control, Perception, Luck
		Ki Sensing					Perception
		Skill Mastery Rate			Control
		
		Decomposition Rate			Control (< Max Fluctuation)
		Manifestation Rate			Control (< Max Fluctuation)

		Recoil (firearms only)		weapon type, weapon power, weight, Strength
		Reload Time (firearms)		weapon type, Flux, Power
		Attack Speed (firearms)		weapon type, weapon modifiers, Dexterity

		
Stat based mechanics
	If you have high control, you can use effects that require lower control, but not vice versa
	--	AoE tends to require less control, but without a good amount of control, the spread will be
		fairly random.  With higher control, the spread will become more favorable.
	Attack power of firearms does not depend on strength
	--	Firearms have higher attack power, but their strength depends solely on how good the
		weapon is.  
	--	They do, however, have a kickback which is mitigated by strength and weight
	
Counters of stuff that are not really "stats" in the traditional RPG sense
	Maximum combo
		Current combo count
	Overkill bonus
		Perhaps a mouseover tooltip that explains how overkill damage is applied
	Amount of certain enemies killed
		Gain a title which bestows affinity to a certain type of enemy when enough are killed
		Title for killing a diverse population of enemies
	
Plot Concept
	Create bosses which embody the Grand Curses
		Immortality
		Clairvoyance
		Midas Touch
		Love of the People (Inspired by Geass)

Quotes / Possible Dialogue
	"Regardless of why, humans desire power, power to rule, power to protect, it matters not.
		The result is the same.  Destruction.  The reason is the same.  Greed.
		Both stem from ambition.  All stems from this will, the will of life.
		Life is inseparable from sin.  Let us purge the sin from this world.
		Let The Gate shine once more.  Let the judgment of god resume once more."

Sprite rendering and Chipmunk
	The coordinate system is not what is expected of physics.
		The CS coordinate system is used (or something similar)
			Right is positive
			Down is POSITIVE
		HOWEVER
			Use down as negative for the z direction
			This allows for using the z axis for height as well as z index

For stackable objects
	All objects in the "stack" should have a pointer to the top item in the stack
	
	The major problem with stackable objects in toppling
		Thus, do not allow for n-dimensional stacks
			If you lift a box, etc, it should thus be unable to jump.
		One way to resolve this is to have objects snap into stacks.

For gravity/force management
	Store all forces on a object in a data structure, and then iterate over the structure to
		calculate the acceleration of the object.
	This process only needs to be processed for the z-direction, as the xy plane should be handled
		by the existing code in the Chipmunk engine.
		
For scaling
	Try to monkey patch Gosu::Image in order to scale all draw commands automatically.
	To do this, alias Gosu::Image#draw to something else, then overwrite the method to call the new
		method, calling the correct parameters scaled appropriately.
		
Chipmunk Shape_3D function arguments
	Take position and dimensions as an array marked by a hash tag
	ie	:pos => [0,0,0], :dimensions => [0,0,0]

Mac OSX Notes -- assumes installation though macports
	ruby1.9
	gem1.9
	
	using "/usr/bin/env ruby" will not work on OSX, as it will use ruby 1.8 instead

Bugs/Additions
	===	There is a point at the edge of a building where you will be kicked off the roof.  This only
		happens on the shared edge of two buildings of unequal height.
			This bug only seems to occur on the left edge of the higher building.
		
			This is probably because elevation is not actually being used like I thought it was ^_^;
		
			Just use the workaround
		
	===	Fix camera scrolling
			Needs to stop when the character hits a wall or similar object
			
	===Build New Tools
		---Level Editor
			( )	Can place art assets on screen, including characters, objects, parts of the 
				landscape, and buildings.
				
			( )	Should respect Chipmunk physics of those objects.
				+	Thus, when moving the objects, it will not be possible to move them into
					positions where objects overlap in Chipmunk space.
				
					
					
		---Graphical Bounding Box Editor
			( )	Perhaps part of the level editor, this would display a given image on screen with
				a sort of wireframe for the bounding box.  The box could then be altered either with
				the mouse or the arrow keys.
				
			( )	It would be cool to be able to load up a quick test scene in the engine to test 
				the bounding box. 
				
			( )	The bounding box data should be saved to a YAML file which can be later read
				to create the proper bounds for that object in Chipmunk space, or edited again
				in the editor.
				
